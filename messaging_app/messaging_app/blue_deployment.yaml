# MySQL Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0.33
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "another_secure_password"
        - name: MYSQL_DATABASE
          value: "messaging_app_db"
        - name: MYSQL_USER
          value: "messaging_app_user"
        - name: MYSQL_PASSWORD
          value: "some_secure_password"
        ports:
        - containerPort: 3306
---
# Django Application Deployment (Blue Version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app-blue-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: messaging-app
      version: blue
  template:
    metadata:
      labels:
        app: messaging-app
        version: blue
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-08-17T12:00:00Z"
    spec:
      initContainers:
      - name: init-db-wait
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z db 3306; do echo waiting for db; sleep 2; done;']
      containers:
      - name: messaging-app
        image: messaging-app:2.0  # New image version
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_DATABASE
        ports:
        - containerPort: 8000
